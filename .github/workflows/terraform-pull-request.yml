name: Terraform tests

permissions:
  contents: read # This is required for actions/checkout
  id-token: write # This is required for requesting the JWT
  pull-requests: write # This is required for actions/github-script

on:
  pull_request:
    branches:
      - main

env:
  RUN_NUMBER: ${{ github.run_number }}
  TERRAFORM_DOCS_VERSION: v0.16.0
  TFLINT_VERSION: v0.46.1

jobs:
  start-notify:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Get current date
        id: format_date
        run: echo "date=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Terraform CI started. Beginning validations..."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Date:*\n${{ env.date }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:*\n${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "See more here"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.TOOLINGANDFOUNDATION_SLACK_BOT_TOKEN }}

  pre-commit:
    name: Pre commit
    needs: start-notify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Find terraform version
        id: maxVer
        uses: clowdhaus/terraform-min-max@v1.2.4

      - id: private-modules
        uses: philips-labs/terraform-private-modules-action@v1
        with:
          org: dinocloud
          token: ${{ secrets.DOWNLOAD_PRIVATE_REPOSITORIES }}

      - name: Pre-commit Terraform ${{ steps.maxVer.outputs.maxVersion }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
        with:
          terraform-version: ${{ steps.maxVer.outputs.maxVersion }}
          tflint-version: ${{ env.TFLINT_VERSION }}
          terraform-docs-version: ${{ env.TERRAFORM_DOCS_VERSION }}
          install-hcledit: true

  security-scan:
    name: Security checks
    needs: start-notify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Run kics Scan
        uses: checkmarx/kics-github-action@v1.7.0
        with:
          path: '.'
          ignore_on_exit: results
          output_path: kicsScan/

  matrix-set-up:
    name: Matrix Set Up
    needs: pre-commit
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set matrix
        id: set-matrix
        run: |
          matrix=$((
            echo '{"environment":'
            echo '["production", "develop", "staging"]'
            echo '}'
          ) | jq -c .)
          echo $matrix | jq .
          echo matrix=$matrix >> $GITHUB_OUTPUT

  tests:
    name: Tests
    needs: [matrix-set-up]
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    strategy:
      matrix: ${{fromJson(needs.matrix-set-up.outputs.matrix)}}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find terraform version
        id: maxVer
        uses: clowdhaus/terraform-min-max@v1.2.4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.maxVer.outputs.maxVersion }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.region }}
          role-to-assume: ${{ secrets[format('ROLE_ARN_{0}', matrix.environment )] }}

      - id: private-modules
        uses: philips-labs/terraform-private-modules-action@v1
        with:
          org: dinocloud
          token: ${{ secrets.TERRAFORM_INTERNAL_MODULES_TOKEN }}

      - name: Terraform init
        id: init
        run: terraform init -backend-config=config/backend/${{ matrix.environment }}.tfbackend

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -var-file=config/environments/${{ matrix.environment }}.tfvars

      - name: Update pull request
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.TERRAFORM_INTERNAL_MODULES_TOKEN }}
          script: |
            const output = `### Environment: \`${{ matrix.environment }}\`
            #### Terraform initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  end-notify-success:
    runs-on: ubuntu-latest
    needs: [tests]
    if: success()
    steps:
      - name: Get current date
        id: format_date
        run: echo "date=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: Post to a Slack channel
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Terraform CI success",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Date:*\n${{ env.date }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:*\n${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "See Terraform Plan here"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.TOOLINGANDFOUNDATION_SLACK_BOT_TOKEN }}

  end-notify-failure:
    runs-on: ubuntu-latest
    needs: [tests]
    if: failure()
    steps:
      - name: Get current date
        id: format_date
        run: echo "date=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: Post to a Slack channel
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Terraform CI failure",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Date:*\n${{ env.date }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:*\n${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "See why here"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.TOOLINGANDFOUNDATION_SLACK_BOT_TOKEN }}
